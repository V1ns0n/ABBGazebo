irb1200:
  # Publish all joint states -----------------------------------
 joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50  
  
  # Arm Controllers ---------------------------------------
 arm_controller:
   type: position_controllers/JointTrajectoryController
   joints:
     - joint_1
     - joint_2
     - joint_3
     - joint_4
     - joint_5
     - joint_6
   constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.05
      joint_1: {trajectory: 0.1, goal: 0.1}
      joint_2: {trajectory: 0.1, goal: 0.1}
      joint_3: {trajectory: 0.1, goal: 0.1}
      joint_4: {trajectory: 0.1, goal: 0.1}
      joint_5: {trajectory: 0.1, goal: 0.1}
      joint_6: {trajectory: 0.1, goal: 0.1}
   stop_trajectory_duration: 0.5
   state_publish_rate:  25
   action_monitor_rate: 10
   
   #Gripper Controller -------------------------------------------
 gripper_controller:
   type: position_controllers/JointTrajectoryController
   joints:
     - finger_1_joint
     - finger_2_joint
   constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.05
      finger_1_joint: {trajectory: 0.1, goal: 0.1}
      finger_2_joint: {trajectory: 0.1, goal: 0.1}
   stop_trajectory_duration: 0.5
   state_publish_rate:  25
   action_monitor_rate: 10
   
   # Wheel Controller ------------------------------------------
 wheel_controller:
   type: "diff_drive_controller/DiffDriveController"
   left_wheel: ['wheelLFJ', 'wheelLBJ']
   right_wheel: ['wheelRFJ', 'wheelRBJ']
   publish_rate: 50
   pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
   twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
   cmd_vel_timeout: 0.25

   # Base frame_id
   base_frame_id: base_link

   # Odometry fused with IMU is published by robot_localization, so
   # no need to publish a TF based on encoders alone.
   enable_odom_tf: true

   # Husky hardware provides wheel velocities
   estimate_velocity_from_position: false
   
   # wheel radius
   wheel_radius: 0.068
   
   # wheel_separation
   wheel_separation: 0.438

   # Wheel separation and radius multipliers
   wheel_separation_multiplier: 1.0 # default: 1.0
   wheel_radius_multiplier    : 1.0 # default: 1.0

   # Velocity and acceleration limits
   # Whenever a min_* is unspecified, default to -max_*
   linear:
     x:
       has_velocity_limits    : true
       max_velocity           : 1.0   # m/s
       has_acceleration_limits: true
       max_acceleration       : 3.0   # m/s^2
   angular:
     z:
       has_velocity_limits    : true
       max_velocity           : 2.0   # rad/s
       has_acceleration_limits: true
       max_acceleration       : 6.0   # rad/s^2
